# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name ds2.app.local pipelines.app.local;
    return 301 https://$host$request_uri;
}

# DS2 Secure server block
server {
    listen 443 ssl;
    server_name ds2.app.local;

    ssl_certificate /etc/nginx/ssl/ds2.app.local.crt;
    ssl_certificate_key /etc/nginx/ssl/ds2.app.local.key;

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    location / {
        proxy_pass http://DS2-Frontend:3003;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /sockjs-node {
        proxy_pass http://DS2-Frontend:3003;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /ds2_backend {
        rewrite /ds2_backend/(.*) /$1 break;
        proxy_pass http://DS2-Backend:8003;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Jenkins Secure server block
server {
    listen 443 ssl;
    server_name pipelines.app.local;

    ssl_certificate /etc/nginx/ssl/pipelines.app.local.crt;
    ssl_certificate_key /etc/nginx/ssl/pipelines.app.local.key;

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    location / {
        proxy_pass http://192.168.6.233:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
